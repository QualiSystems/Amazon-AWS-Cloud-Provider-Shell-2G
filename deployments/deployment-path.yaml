tosca_definitions_version: tosca_simple_yaml_1_0

metadata:
  template_name: AmazonAWSCloudProviderShell2G
  template_author: Quali
  template_version: 1.2.0
  template_icon: DeploymentTypes-AWS-EC2.png

description: >
  sample deployment path file

imports:
  - cloudshell_standard: cloudshell_cloud_provider_standard_1_0_0.yaml

node_types:

  vendor.resource.Amazon AWS EC2 Instance 2G:
    derived_from: cloudshell.nodes.CustomDeploymentOption
    properties:
      AWS AMI Id:
        type: string
        default: ""
        description: "The AWS AMI ID to launch the instance from. The AMI should be
        accessible in the selected cloud provider's AWS region. For example :ami-6869aa05."
        tags: [ user_input ]
      Allow all Sandbox Traffic:
        type: boolean
        default: true
        description: "Whether an app should allow inbound traffic from all other apps
        in the sandbox. If set to false, access from specific apps or subnets can be
        defined by an API call."
        tags: [ user_input ]
      Instance Type:
        type: string
        default: ""
        description: "The AWS EC2 instance type. The instance type determines the CPU,
        memory and networking capacity of the instance. For example: t2.large."
        tags: [ user_input ]
      IAM Role Name:
        type: string
        default: ""
        description: "Provide the IAM role name to be used in this instance."
        tags: [ user_input ]
      Inbound Ports:
        type: string
        default: ""
        description: "Ports, protocol and source to open inbound traffic from outside
        of the sandbox. The syntax is
        port[single/range]:protocol[tcp(default)/udp]:source[cidr] with semi-colon
        separation. The default source cidr, if not specified, is any (0.0.0.0/0).
        For example: 80;443:tcp:10.0.0.0/24;200-220:udp;icmp;icmp:10.0.0.0/24"
        tags: [ user_input ]
      Public IP Options:
        type: string
        default: "No Public IP"
        description: "Select whether to create a public IP. If the VM will be connected
        to more than one subnet, and public IP is required in at least one of them, the
        'elastic IPs' option ought to be selected."
        tags: [ user_input ]
        constraints:
          - valid_values: [ "No Public IP", "Public IP (single subnet)", "Elastic IPs" ]
      Storage Size:
        type: integer
        default: 0
        description: "The root volume size. The value must be greater or equal to the
        size of the root snapshot used. If set to zero the default defined in the image
        will be used. For example: 30."
        tags: [ user_input ]
      Storage IOPS:
        type: integer
        default: 0
        description: "The default number of I/O operations per second that the root
        volume can support. This parameter is used only for storage of type io1, in
        which you can provision up to 30 IOPS per GiB. If set to zero the default in
        the image will be used. For example: 240."
        tags: [ user_input ]
      Static Security Group Id:
        type: string
        default: ""
        description: "An Id of an existing security group, that should be assigned to
         an instance during it's deployment."
        tags: [ user_input ]
      Storage Type:
        type: string
        default: "auto"
        description: "The type of the storage volume. In AWS there are few EBS Volume
        types that can be used, gp2 and io1 for SSD, st1 and sc1 for HDD or the standard
        type which is the old generation EBS volume type. If auto is selected the
        storage type defined in the image will be used."
        constraints:
          - valid_values: [ "auto", "gp2", "gp3", "io1", "io2", "st1", "sc1", "standard" ]
        tags: [ user_input ]
      Storage Encryption Key:
        type: string
        default: ""
        description: "Allow KMS encryption for EC2 Instances for EBS Disks."
        tags: [ user_input ]
      Root Volume Name:
        type: string
        default: ""
        description: "The available device names for the volume. Depending on the block
        device driver of the selected AMI's kernel, the device may be attached with a
        different name than what you specify. If left empty the default defined in the
        AMI will be used. For example: /dev/xvda"
        tags: [ user_input ]
      Autoload:
        type: boolean
        default: true
        description: "Enables the automatic execution of the Autoload command during
        reservation Setup."
        tags: [ user_input ]
      Wait for IP:
        type: boolean
        default: false
        description: "If set to False the deployment will not wait for the VM to get an
        ip"
        tags: [ user_input ]
      Wait for Status Check:
        type: boolean
        default: false
        description: "If enabled the app deployment will end successfully only after
        instance status checks has passed. The status checks include network
        connectivity, physical host status, system status and more."
        tags: [ user_input ]
      Wait for Credentials:
        type: boolean
        default: true
        description: "Enable in order to retrieve credentials from a Windows machine.
        Note that if this parameter is enabled and the credentials weren't retrieved
        within 15 minutes the deployment will fail."
        tags: [ user_input ]
      Custom Tags:
        type: string
        default: ""
        description: "Custom tags per EC2 instance, Comma separated values e.g:
        tag_name:ec2_instance,tag_name2:ec2_instance2"
        tags: [ user_input ]
      User Data URL:
        type: string
        default: ""
        description: "The URL of the user data script either bash or powershell script"
        tags: [ user_input ]
      User Data Parameters:
        type: string
        default: ""
        description: "Parameters to execute the script e.g: 'param1 param2 ' will end
        in running the command like this :'./file.sh param1 param2' or 
        'Invoke-Expression -Command file.ps1 param1 param2'"
        tags: [ user_input ]
      Private IP:
        type: string
        default: ""
        description: "When the VPC is in static mode this attribute is used to set a
        static private IP for the deployed app. To set static private IPs in multi
        subnet mode the expected value is a json string that maps the subnet request
        CIDR to the requested static private IP.
        Example: {'10.0.0.0/28': '10.0.0.6'}"
        tags: [ user_input ]
      Enable Source Dest Check:
        type: boolean
        default: true
        description: "Set to True to enable source/destination checks.
        Source/destination checks allow users to create custom routing inside the VPC.
        It is applied to all vNICs of a certain instance. If enabled, you can
        reconfigure routing to go through that instance. This value must be False for
        Virtual Appliance instances like virtual firewalls/routers."
        tags: [ user_input ]
      Status Check Timeout:
        type: integer
        default: 0
        description: "Timeout, in seconds, for AWS status checks to pass. Some virtual
        appliances may take a while to fully deploy and AWS will show them as impaired
        from 20 minutes until they fully deploy. Therefore, to ensure virtual appliance
        instances are not stopped when they become impaired, use this attribute to
        provide a long enough timeout for the instance to complete its status check.
        The default timeout is 600 seconds (10 minutes). However, instance deployment
        will fail once the instance status becomes 'impaired'. Specifying a status check
        timeout period will configure CloudShell to ignore the 'impaired' status and
        instead wait for the instance deployment to complete or the timeout period to
         pass."
        tags: [ user_input ]
    artifacts:
      icon:
        file: DeploymentTypes-AWS-EC2.png
        type: tosca.artifacts.File
