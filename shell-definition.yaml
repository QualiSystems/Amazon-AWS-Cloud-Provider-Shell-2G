tosca_definitions_version: tosca_simple_yaml_1_0

metadata:
  template_name: Amazon AWS Cloud Provider Shell 2G
  template_author: Quali
  template_version: 1.4.0
  template_icon: AWS.png

description: >
  AWS EC2 template will create a AWS EC2 resource in CloudShell. Once the AWS EC2 is
  modeled correctly in CloudShell it will be possible to deploy Apps on this AWS EC2.

imports:
  - cloudshell_standard: cloudshell_cloud_provider_standard_1_0_0.yaml

node_types:
 vendor.resource.Amazon AWS Cloud Provider 2G:
    derived_from: cloudshell.nodes.CustomCloudProvider
    properties:
      Region:
        type: string
        default: ""
        description: "The code of the AWS region to be used by this cloud provider
        resource. For example, 'us-east-1'."
        constraints:
          - valid_values:
            - us-east-1
            - us-east-2
            - us-west-1
            - us-west-2
            - eu-central-1
            - eu-west-1
            - ap-southeast-1
            - ap-southeast-2
            - ap-northeast-1
            - ap-northeast-2
      AWS Mgmt SG ID:
        type: string
        default: ""
        description: "The Management VPC's security group (use the SG1id output when
        configuring the Management VPC for the region). For example, 'sg-71240198'.
        This value is used by the Setup process to configure the communication between
        the Management VPC's instances and the Sandbox instances."
      AWS Mgmt VPC ID:
        type: string
        default: ""
        description: "ID of the Management VPC. Used by the Setup process to set up the
        VPC and subnet for the sandbox (use the ManagementVPCID output when configuring
        the Management VPC for the region). For example 'vpc-633fb904'. This value is
        created when configuring the Management VPC for the region."
      Keypairs Location:
        type: string
        default: ""
        description: "S3 bucket containing sandbox PEM files (use the S3Name output when
        configuring the Management VPC for the region). Each active Sandbox creates a
        PEM file under a designated folder. For example, 'sandbox-management'."
      Max Storage Size:
        type: integer
        default: 0
        description: "(Optional) The maximum number of GiB in the root volume. The value
        of this parameter will be the storage size limit for all apps deployed on this
        Cloud Provider. For example, '8'. The value must be greater than or equal to the
        size of the root snapshot used. If set to '0', the default size of the snapshot
        will be used."
      Max Storage IOPS:
        type: integer
        default: 0
        description: "(Optional) The maximum number of I/O operations per second to be
        supported by the volume. The value of this parameter will be the storage IOPS
        limit for all apps deployed on this Cloud Provider. For example, '240'. This
        parameter is used only for storage of type io1, in which you can provision up to
        30 IOPS per GiB. If set to zero, the default in the image is used."
      Networks in use:
        type: string
        default: ""
        description: "Reserved networks that will be excluded when allocating sandbox
        networks, and therefore must include the Management VPC CIDR (which was provided
        as an input to the CloudFormation deployment process) as well as any other
        private networks that have access to the Management VPC. The syntax is comma
        separated CIDR, only of size '/24'. For example, '10.0.0.0/24,172.31.0.0/24'."
      Instance Type:
        type: string
        default: ""
        description: "(Optional) The default AWS EC2 instance type for the deployed
        instance. The instance type determines the CPU, memory and networking capacity
        of the instance to be deployed. For example 't2.large'. The instance type can be
        changed when creating the App in the Manage dashboard."
      VPC Mode:
        type: string
        default: "Dynamic"
        description: "Every sandbox with AWS Apps deploys a VPC to AWS, while in Shared
        VPC mode, CloudShell deploys the sandbox to an existing VPC. This setting
        determines how the sandbox VPC selects a CIDR block. Options are:<br>
        * Dynamic: The CIDR block is selected by Cloudshell Server. In other
        words, CloudShell deploys a new VPC with a dedicated CIDR for every sandbox.<br>
        * Static: The CIDR block for all sandboxes allocated is taken from the VPC CIDR
        attribute.<br>
        * Shared: Indicates that the cloud provider resource will deploy to the shared
        VPC defined in Shared VPC ID and use the VPC CIDR block.<br>
        * Single: The sandbox infrastructure will be deployed to the Management VPC and
        use the VPC CIDR block."
        constraints:
          - valid_values: [ "Dynamic", "Static", "Shared", "Single", "Predefined networking" ]
      Static VPC CIDR:
        type: string
        default: ""
        description: "CIDR to be used for sandbox VPC if VPC Mode is set to Static."
      Shared VPC ID:
        type: string
        default: ""
        description: "(Mandatory for Shared VPC mode) Shared VPC's ID (can be found in
        the output of the shared VPC CloudFormation stack, in the SharedVPCId key).
        For example: 'vpc-0bf24b1ebrd855e30'."
      Shared VPC Role Arn:
        type: string
        default: ""
        description: "(Mandatory for Shared VPC mode) Role created by the CloudFormation
        process with read/write permissions in the AWS account (can be found in the
        output of the shared VPC CloudFormation stack, in the SharedRoleARN key).
        This role is used by CloudShell to operate in the shared VPC."
      AWS Secret Access Key:
        type: cloudshell.datatypes.Password
        default: ""
        description: "If empty the role that is configured on the Execution Server
        instance in the Management VPC is used."
      AWS Access Key ID:
        type: cloudshell.datatypes.Password
        default: ""
        description: "If empty the role that is configured on the Execution Server
        instance in the Management VPC is used."
      Transit Gateway ID:
        type: string
        default: ""
        description: "(Mandatory for Shared VPC mode) ID of the transit gateway
        (can be found in the output of the main CloudFormation stack, in the TGWid key)."
      Additional Management Networks:
        type: string
        default: ""
        description: "Networks to be allowed to interact with all sandboxes. This is
        used for allowing connectivity to AWS resources outside the Management VPC.
        The syntax is comma separated CIDRs.
        For example, '10.0.0.0/24,10.1.0.0/16,172.31.0.0/24'."
      VPN Gateway ID:
        type: string
        default: ""
        description: "(Applies to Shared VPC mode only) ID of the gateway to use.
        Required to connect the shared VPC's sandbox subnets to the VPN gateway.
        CloudShell does this by creating a route between the specified VPN gateway and
        the connected subnet within the VPC CIDR. Can be found in the output of the
        shared VPC CloudFormation stack, in the VPNGWid key."
      VPN CIDRs:
        type: string
        default: ""
        description: "(Mandatory for Shared VPC mode if VPN Gateway ID is defined)
        Comma-separated list of CIDRs in the local network to be used to VPN to the
        shared VPC. Example, 10.1.0.0/24,10.3.0.0/16"
    capabilities:
      concurrent_command_capability:
        type: cloudshell.capabilities.SupportConcurrentCommands
      auto_discovery_capability:
        type: cloudshell.capabilities.AutoDiscovery
        properties:        
          enable_auto_discovery:
            type: boolean
            default: true
          auto_discovery_description:
            type: string
            default: "After filling in all the inputs click Start Discovery to complete
            the cloud provider creation process"
          inventory_description:
            type: string
            default: "AWS EC2 template will create a AWS EC2 resource in CloudShell.
            Once the AWS EC2 is modeled correctly in CloudShell it will be possible to
            deploy Apps on this AWS EC2."
          hide_address:
            type: string
            default: true
          Region:
            type: string
            default: ""
            description: "The code of the AWS region to be used by this cloud provider
            resource. For example, 'us-east-1'."
            constraints:
              - valid_values:
                - us-east-1
                - us-east-2
                - us-west-1
                - us-west-2
                - eu-central-1
                - eu-west-1
                - ap-southeast-1
                - ap-southeast-2
                - ap-northeast-1
                - ap-northeast-2
          AWS Mgmt SG ID:
            type: string
            default: ""
            description: "The Management VPC's security group (use the SG1id output when
            configuring the Management VPC for the region). For example, 'sg-71240198'.
            This value is used by the Setup process to configure the communication between
            the Management VPC's instances and the Sandbox instances."
          AWS Mgmt VPC ID:
            type: string
            default: ""
            description: "ID of the Management VPC. Used by the Setup process to set up
            the VPC and subnet for the sandbox (use the ManagementVPCID output when
            configuring the Management VPC for the region). For example 'vpc-633fb904'.
            This value is created when configuring the Management VPC for the region."
          Keypairs Location:
            type: string
            default: ""
            description: "S3 bucket containing sandbox PEM files (use the S3Name output
            when configuring the Management VPC for the region). Each active Sandbox
            creates a PEM file under a designated folder. For example,
            'sandbox-management'."
          Max Storage Size:
            type: integer
            default: 0
            description: "(Optional) The maximum number of GiB in the root volume. The
            value of this parameter will be the storage size limit for all apps deployed
            on this Cloud Provider. For example, '8'. The value must be greater than or
            equal to the size of the root snapshot used. If set to '0', the default size
            of the snapshot will be used."
          Max Storage IOPS:
            type: integer
            default: 0
            description: "(Optional) The maximum number of I/O operations per second to
            be supported by the volume. The value of this parameter will be the storage
            IOPS limit for all apps deployed on this Cloud Provider. For example, '240'.
            This parameter is used only for storage of type io1, in which you can
            provision up to 30 IOPS per GiB. If set to zero, the default in the image is
            used."
          Networks in use:
            type: string
            default: ""
            description: "Reserved networks that will be excluded when allocating
            sandbox networks, and therefore must include the Management VPC CIDR (which
            was provided as an input to the CloudFormation deployment process) as well
            as any other private networks that have access to the Management VPC. The
            syntax is comma separated CIDR, only of size '/24'. For example,
            '10.0.0.0/24,172.31.0.0/24'."
          Instance Type:
            type: string
            default: ""
            description: "(Optional) The default AWS EC2 instance type for the deployed
            instance. The instance type determines the CPU, memory and networking
            capacity of the instance to be deployed. For example “t2.large”. The
            instance type can be changed when creating the App in the Manage dashboard."
          VPC Mode:
            type: string
            default: "Dynamic"
            description: "Every sandbox with AWS Apps deploys a VPC to AWS, while in
            Shared VPC mode, CloudShell deploys the sandbox to an existing VPC. This
            setting determines how the sandbox VPC selects a CIDR block. Options are:
            <br>
            * Dynamic: The CIDR block is selected by Cloudshell Server. In other
            words, CloudShell deploys a new VPC with a dedicated CIDR for every
            sandbox.<br>
            * Static: The CIDR block for all sandboxes allocated is taken from the VPC
            CIDR attribute.<br>
            * Shared: Indicates that the cloud provider resource will deploy to the
            shared VPC defined in Shared VPC ID and use the VPC CIDR block.<br>
            * Single: The sandbox infrastructure will be deployed to the Management VPC
            and use the VPC CIDR block."
            constraints:
              - valid_values: [ "Dynamic", "Static", "Shared", "Single", "Predefined networking" ]
          Static VPC CIDR:
            type: string
            default: ""
            description: "CIDR to be used for sandbox VPC if VPC Mode is set to Static."
          Shared VPC ID:
            type: string
            default: ""
            description: "(Mandatory for Shared VPC mode) Shared VPC's ID (can be found
            in the output of the shared VPC CloudFormation stack, in the SharedVPCId
            key). For example: 'vpc-0bf24b1ebrd855e30'."
          Shared VPC Role Arn:
            type: string
            default: ""
            description: "(Mandatory for Shared VPC mode) Role created by the
            CloudFormation process with read/write permissions in the AWS account (can
            be found in the output of the shared VPC CloudFormation stack, in the
            SharedRoleARN key). This role is used by CloudShell to operate in the shared
            VPC."
          Transit Gateway ID:
            type: string
            default: ""
            description: "(Mandatory for Shared VPC mode) ID of the transit gateway
            (can be found in the output of the main CloudFormation stack, in the TGWid
            key)."
          Additional Management Networks:
            type: string
            default: ""
            description: "Networks to be allowed to interact with all sandboxes. This is
            used for allowing connectivity to AWS resources outside the Management VPC.
            The syntax is comma separated CIDRs.
            For example, '10.0.0.0/24,10.1.0.0/16,172.31.0.0/24'."
          VPN Gateway ID:
            type: string
            default: ""
            description: "(Applies to Shared VPC mode only) ID of the gateway to use.
            Required to connect the shared VPC's sandbox subnets to the VPN gateway.
            CloudShell does this by creating a route between the specified VPN gateway
            and the connected subnet within the VPC CIDR. Can be found in the output of
            the shared VPC CloudFormation stack, in the VPNGWid key."
          VPN CIDRs:
            type: string
            default: ""
            description: "(Mandatory for Shared VPC mode if VPN Gateway ID is defined)
            Comma-separated list of CIDRs in the local network to be used to VPN to the
            shared VPC. Example, 10.1.0.0/24,10.3.0.0/16"
    artifacts:
      icon:
        file: AWS.png
        type: tosca.artifacts.File
      driver:
        file: AmazonAWSCloudProviderShell2GDriver.zip
        type: tosca.artifacts.File
      deployment:
        file: Deployments.zip
        type: tosca.artifacts.File
